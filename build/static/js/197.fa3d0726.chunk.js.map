{"version":3,"file":"static/js/197.fa3d0726.chunk.js","mappings":"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","sources":["assets/logo.svg","components/Contacts.jsx","components/Welcome.jsx","components/ChatInput.jsx","components/Logout.jsx","components/Messages.jsx","components/ChatContainer.jsx","pages/Chat.jsx","utils/APIRoutes.js"],"sourcesContent":["var _g, _path, _path2, _path3, _path4, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 854,\n    height: 881,\n    viewBox: \"0 0 854 881\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_if_8_55)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M843.612 416.224L661.271 279.042C624.837 251.631 592.324 219.366 564.635 183.144L427.133 3.26761L252.704 228.166C263.804 272.342 309.223 373.207 417.675 387.754C450.209 392.127 504.14 395.804 592.319 372.386C593.3 372.208 594.282 372.083 595.263 371.922C608.005 385.291 634.311 442.105 705.464 472.537C742.941 486.531 765.374 472.752 789.002 456.009L843.612 416.224Z\",\n    fill: \"#0E77F7\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M843.612 416.224L661.271 279.042C624.837 251.631 592.324 219.366 564.635 183.144L427.133 3.26761L252.704 228.166C263.804 272.342 309.223 373.207 417.675 387.754C450.209 392.127 504.14 395.804 592.319 372.386C593.3 372.208 594.282 372.083 595.263 371.922C608.005 385.291 634.311 442.105 705.464 472.537C742.941 486.531 765.374 472.752 789.002 456.009L843.612 416.224Z\",\n    fill: \"url(#paint0_linear_8_55)\"\n  }))), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter1_df_8_55)\"\n  }, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.319 372.083C626.673 365.639 663.186 372.904 684.976 381.007C697.861 386.166 752.792 406.924 788.878 455.724L843.612 415.885L661.239 278.648C624.861 251.273 592.393 219.059 564.734 182.898L427.133 3L252.704 227.898C263.804 272.075 309.223 372.94 417.675 387.487C450.209 391.86 504.14 395.537 592.319 372.119\",\n    fill: \"url(#paint1_linear_8_55)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.319 372.083C626.673 365.639 663.186 372.904 684.976 381.007C697.861 386.166 752.792 406.924 788.878 455.724L843.612 415.885L661.239 278.648C624.861 251.273 592.393 219.059 564.734 182.898L427.133 3L252.704 227.898C263.804 272.075 309.223 372.94 417.675 387.487C450.209 391.86 504.14 395.537 592.319 372.119\",\n    fill: \"url(#paint2_linear_8_55)\",\n    fillOpacity: 0.3\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M592.319 372.083C626.673 365.639 663.186 372.904 684.976 381.007C697.861 386.166 752.792 406.924 788.878 455.724L843.612 415.885L661.239 278.648C624.861 251.273 592.393 219.059 564.734 182.898L427.133 3L252.704 227.898C263.804 272.075 309.223 372.94 417.675 387.487C450.209 391.86 504.14 395.537 592.319 372.119\",\n    fill: \"url(#paint3_linear_8_55)\",\n    style: {\n      mixBlendMode: \"darken\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter2_iif_8_55)\"\n  }, _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 429.075L267.177 607.601L446.514 842.031L620.944 617.133C609.826 572.956 564.425 472.127 455.973 457.58C423.457 453.207 369.508 449.53 281.329 472.948C280.365 473.127 279.384 473.252 278.402 473.412C265.642 460.043 239.355 403.23 168.184 372.797C130.707 358.803 108.292 372.583 84.6632 389.325L30 429.075Z\",\n    fill: \"#0C75F5\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30 429.075L267.177 607.601L446.514 842.031L620.944 617.133C609.826 572.956 564.425 472.127 455.973 457.58C423.457 453.207 369.508 449.53 281.329 472.948C280.365 473.127 279.384 473.252 278.402 473.412C265.642 460.043 239.355 403.23 168.184 372.797C130.707 358.803 108.292 372.583 84.6632 389.325L30 429.075Z\",\n    fill: \"url(#paint4_linear_8_55)\",\n    style: {\n      mixBlendMode: \"darken\"\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter3_df_8_55)\"\n  }, _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.329 473.198C246.975 479.66 210.479 472.377 188.689 464.274C175.804 459.115 120.873 438.375 84.7702 389.575L30 429.343L223.348 574.864C252.431 596.753 278.391 622.51 300.507 651.421L446.514 842.281L620.944 617.383C609.861 573.224 564.425 472.359 455.973 457.812C423.457 453.439 369.508 449.762 281.329 473.163\",\n    fill: \"url(#paint5_linear_8_55)\"\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.329 473.198C246.975 479.66 210.479 472.377 188.689 464.274C175.804 459.115 120.873 438.375 84.7702 389.575L30 429.343L223.348 574.864C252.431 596.753 278.391 622.51 300.507 651.421L446.514 842.281L620.944 617.383C609.861 573.224 564.425 472.359 455.973 457.812C423.457 453.439 369.508 449.762 281.329 473.163\",\n    fill: \"url(#paint6_radial_8_55)\",\n    fillOpacity: 0.5,\n    style: {\n      mixBlendMode: \"multiply\"\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M281.329 473.198C246.975 479.66 210.479 472.377 188.689 464.274C175.804 459.115 120.873 438.375 84.7702 389.575L30 429.343L223.348 574.864C252.431 596.753 278.391 622.51 300.507 651.421L446.514 842.281L620.944 617.383C609.861 573.224 564.425 472.359 455.973 457.812C423.457 453.439 369.508 449.762 281.329 473.163\",\n    fill: \"url(#paint7_linear_8_55)\",\n    style: {\n      mixBlendMode: \"darken\"\n    }\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_if_8_55\",\n    x: 250.704,\n    y: 1.26761,\n    width: 594.908,\n    height: 487.042,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 10\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 15\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"arithmetic\",\n    k2: -1,\n    k3: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"shape\",\n    result: \"effect1_innerShadow_8_55\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1,\n    result: \"effect2_foregroundBlur_8_55\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter1_df_8_55\",\n    x: 242.704,\n    y: 0,\n    width: 610.908,\n    height: 475.724,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 10\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_8_55\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_8_55\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1.5,\n    result: \"effect2_foregroundBlur_8_55\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter2_iif_8_55\",\n    x: 28,\n    y: 365.025,\n    width: 594.944,\n    height: 487.007,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"BackgroundImageFix\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 10\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 15\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"arithmetic\",\n    k2: -1,\n    k3: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.6 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"shape\",\n    result: \"effect1_innerShadow_8_55\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 10\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 15\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"arithmetic\",\n    k2: -1,\n    k3: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"effect1_innerShadow_8_55\",\n    result: \"effect2_innerShadow_8_55\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1,\n    result: \"effect3_foregroundBlur_8_55\"\n  })), /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter3_df_8_55\",\n    x: 0,\n    y: 367.575,\n    width: 650.944,\n    height: 512.706,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\",\n    result: \"hardAlpha\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 8\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 15\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.4 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow_8_55\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow_8_55\",\n    result: \"shape\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1,\n    result: \"effect2_foregroundBlur_8_55\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_8_55\",\n    x1: 725.95,\n    y1: 478.014,\n    x2: 608.117,\n    y2: 309.856,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.324422,\n    stopOpacity: 0.43\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_8_55\",\n    x1: 643.713,\n    y1: 247.258,\n    x2: 547.974,\n    y2: 23.2525,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00319C\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#0073E9\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_8_55\",\n    x1: 436.891,\n    y1: 3,\n    x2: 439.346,\n    y2: 228.846,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint3_linear_8_55\",\n    x1: 341.766,\n    y1: 146.609,\n    x2: 474.328,\n    y2: 207.366,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0036AC\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.764585,\n    stopColor: \"#466098\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint4_linear_8_55\",\n    x1: 170.54,\n    y1: 414.187,\n    x2: 446.097,\n    y2: 643.716,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#003BBB\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.620087,\n    stopColor: \"white\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint5_linear_8_55\",\n    x1: 313.535,\n    y1: 646.785,\n    x2: 538.841,\n    y2: 458.253,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#013FC8\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#0056E9\"\n  })), /*#__PURE__*/React.createElement(\"radialGradient\", {\n    id: \"paint6_radial_8_55\",\n    cx: 0,\n    cy: 0,\n    r: 1,\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"translate(271.189 655.377) rotate(-40.9741) scale(296.693 387.291)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.405211,\n    stopColor: \"#002881\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint7_linear_8_55\",\n    x1: 30,\n    y1: 431.371,\n    x2: 916.815,\n    y2: 347.906,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.187526,\n    stopColor: \"#001C5A\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.ccfbd90732828204fa6989c0f15638c0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Logo from \"../assets/logo.svg\";\r\n\r\nexport default function Contacts({ contacts, currentUser, changeChat }) {\r\n    const [currentUserName, setCurrentUserName] = useState(undefined);\r\n    const [currentUserImage, setCurrentUserImage] = useState(undefined);\r\n    const [currentSelected, setCurrentSelected] = useState(undefined);\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            setCurrentUserImage(currentUser.avatarImage);\r\n            setCurrentUserName(currentUser.username);\r\n            // console.log(currentUserName);\r\n            // console.log(currentUserImage);\r\n        }\r\n    }, [currentUser]);\r\n    const changeCurrentChat = (index, contact) => {\r\n        setCurrentSelected(index);\r\n        changeChat(contact);\r\n    };\r\n        return (\r\n         <>\r\n            {\r\n                //currentUserImage && currentUserName && (\r\n                    <Container>\r\n                        <div className='brand'>\r\n                            <img src={Logo} alt=\"logo\" />\r\n                            <h3>Snappy</h3>\r\n                        </div>\r\n                        <div className='contacts'>\r\n                            {\r\n                                contacts.map((contact, index) => {\r\n                                    return (\r\n                                        <div className={`contact ${index === currentSelected ? \"selected\" : \"\"}`}\r\n                                            key={index} onClick={() => {changeCurrentChat(index,contact)}}>\r\n                                            <div className=\"avatar\">\r\n                                                <img src={`data:image/svg+xml;base64,${contact.avatarImage}`} alt=\"\" />\r\n                                            </div>\r\n                                            <div className=\"username\">\r\n                                                <h3>{contact.username}</h3>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            </div>\r\n                        <div className=\"current-user\">\r\n                            <div className=\"avatar\">\r\n                                <img src={`data:image/svg+xml;base64,${currentUserImage}`} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"username\">\r\n                                <h2>{currentUserName}</h2>\r\n                            </div>\r\n                        </div>\r\n                    </Container>\r\n            //    )\r\n            }\r\n        </>\r\n)};\r\n\r\nconst Container = styled.div`\r\n    display:grid;\r\n    grid-template-rows: 10% 75% 15%;\r\n    overflow: hidden;\r\n    background-color: #080420;\r\n    .brand{\r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        gap:1rem;\r\n        img{\r\n            height: 2rem;\r\n        }\r\n        h3{\r\n            color:white;\r\n            text-transform:uppercase;\r\n        }\r\n    }\r\n    .contacts{\r\n        display:flex;\r\n        flex-direction:column;\r\n        align-items:center;\r\n        overflow:auto;\r\n        gap:0.8rem;\r\n        &::-webkit-scrollbar{\r\n            width:0.2rem;\r\n            &-thumb{\r\n                background-color: #ffffff39;\r\n                width:0.1rem;\r\n                border-radius:1rem;\r\n            }\r\n        }\r\n        .contact{\r\n            background-color: #ffffff39;\r\n            min-height:5rem;\r\n            width:90%;\r\n            cursor:pointer;\r\n            border-radius:0.2rem;\r\n            padding: 0.4rem;\r\n            gap: 1rem;\r\n            align-items: center;\r\n            display: flex;\r\n            transition: 0.5s ease-in-out;\r\n            .avatar{\r\n                img{\r\n                    height:3rem;\r\n                }\r\n            }\r\n            .username{\r\n                h3{\r\n                    color:white;\r\n                }\r\n            }\r\n        }\r\n        .selected{\r\n            background-color: #9186f3;\r\n        }\r\n    }\r\n    .current-user{\r\n        background-color: #0d0d30;\r\n        display:flex;\r\n        justify-content:center;\r\n        align-items:center;\r\n        gap: 2rem;\r\n        .avatar{\r\n            img{\r\n                height:4rem;\r\n                max-inline-size: 100%;\r\n            }\r\n        }\r\n        .username{\r\n            h2{\r\n                color:white;\r\n            }\r\n        }\r\n        @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n            gap:0.5rem;\r\n            .username{\r\n                h2{\r\n                    font-size:1rem;\r\n                }\r\n            }\r\n          }\r\n    }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Robot from \"../assets/robot.gif\"\r\n\r\nexport default function Welcome({currentUser}){\r\n            return (<\r\n                Container>\r\n                <img src={Robot} alt=\"Robot\" />\r\n                 <h1>Welcome, <span>{currentUser.username}!</span></h1> \r\n                <h3>Please select a chat to start messaging </h3>\r\n            </Container>\r\n)}\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    color:white;\r\n    img{\r\n        height:20rem;\r\n    }\r\n    span{\r\n        color:#4e00ff;\r\n    }\r\n`","import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Picker from 'emoji-picker-react';\r\nimport {IoMdSend} from 'react-icons/io';\r\nimport {BsEmojiSmileFill} from 'react-icons/bs';\r\n\r\nexport default function ChatInput({handleSendMsg}){\r\n    const [showEmojiPicker,setShowEmojiPicker] = useState(false);\r\n    const [msg,setMsg] = useState(\"\");\r\n\r\n    const handleEmojiPickerHideShow = () => {\r\n        setShowEmojiPicker(!showEmojiPicker);\r\n    }\r\n\r\n    const handleEmojiClick = (event,emoji) => {\r\n        let message = msg;\r\n        message += emoji.emoji;\r\n        setMsg(message);\r\n    }\r\n\r\n    const sendChat = (event) => {\r\n        event.preventDefault();\r\n        if(msg.length>0){\r\n            handleSendMsg(msg);\r\n            setMsg('');\r\n        }\r\n    } \r\n    // event is fired everytime When \r\n    // An HTML web page has finished loading\r\n    // An HTML input field was changed\r\n    // An HTML button was clicked\r\n\r\n    return ( <Container>\r\n        <div className=\"button-container\">\r\n            <div className=\"emoji\">\r\n                <BsEmojiSmileFill onClick={handleEmojiPickerHideShow}/>{\r\n                  //if emojiPicker true implement picker else nothing\r\n                  //On onclick of anything(emoji) in picker call handleEmojiClick func which will add the \r\n                  //emoji clicked in the picker to message \r\n                     showEmojiPicker && <Picker onEmojiClick={handleEmojiClick}/>\r\n                }\r\n            </div>\r\n        </div>\r\n        <form className=\"input-container\" onSubmit={(e) => sendChat(e)} >\r\n            <input type=\"text\" placeholder=\"type your message here\" value={msg} onChange={(e) => setMsg(e.target.value)}/>\r\n            <button className=\"submit\">         \r\n                <IoMdSend />\r\n            </button>\r\n        </form>\r\n    </Container>\r\n)};\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: 5% 95%;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    padding: 0 1rem;\r\n    gap: 1rem;\r\n  }\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    gap: 1rem;\r\n    .emoji {\r\n      position: relative;\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: #ffff00c8;\r\n        cursor: pointer;\r\n      }\r\n      .emoji-picker-react {\r\n        position: absolute;\r\n        top: -350px;\r\n        background-color: #080420;\r\n        box-shadow: 0 5px 10px #9a86f3;\r\n        border-color: #9a86f3;\r\n        .emoji-scroll-wrapper::-webkit-scrollbar {\r\n          background-color: #080420;\r\n          width: 5px;\r\n          &-thumb {\r\n            background-color: #9a86f3;\r\n          }\r\n        }\r\n        .emoji-categories {\r\n          button {\r\n            filter: contrast(0);\r\n          }\r\n        }\r\n        .emoji-search {\r\n          background-color: transparent;\r\n          border-color: #9a86f3;\r\n        }\r\n        .emoji-group:before {\r\n          background-color: #080420;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 2rem;\r\n    background-color: #ffffff34;\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 1rem;\r\n      font-size: 1.2rem;\r\n\r\n      &::selection {\r\n        background-color: #9a86f3;\r\n      }\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n    button {\r\n      padding: 0.3rem 2rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: #9a86f3;\r\n      border: none;\r\n      @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n        padding: 0.3rem 1rem;\r\n        svg {\r\n          font-size: 1rem;\r\n        }\r\n      }\r\n      svg {\r\n        font-size: 2rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport {BiPowerOff} from 'react-icons/bi';\r\n\r\nexport default function Logout(){\r\n    const navigate = useNavigate();\r\n    const handleClick = async () => {\r\n        localStorage.clear();\r\n        navigate(\"/login\");\r\n    };\r\n    return <Button onClick={handleClick}>\r\n        <BiPowerOff />\r\n    </Button>\r\n}\r\n\r\nconst Button = styled.button`\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    padding: 0.5rem;\r\n    border-radius:0.5rem;\r\n    background-color:#9a86f3;\r\n    border:none;\r\n    cursor:pointer;\r\n    svg{\r\n        font-size:1.3rem;\r\n        color: #ebe7ff;\r\n    }\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Messages(){\r\n    return <Container>\r\n\r\n    </Container>\r\n}\r\n\r\nconst Container = styled.div`\r\n    height: 80%;\r\n\r\n`","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport ChatInput from './ChatInput';\r\nimport Logout from './Logout';\r\nimport Messages from './Messages';\r\nimport axios from 'axios';\r\nimport { getAllMessagesRoute, sendMessageRoute } from '../utils/APIRoutes';\r\nimport { useRef } from 'react';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport default function ChatContainer({currentChat,currentUser,socket}){\r\n    const scrollRef = useRef();\r\n    const [messages,setMessages] = useState([]);\r\n    const [arrivalMessage,setArrivalMessage] = useState(null);\r\n\r\n    //for getting all the previous messages\r\n    useEffect( () => {\r\n        const f1 = async () => {\r\n        if(currentChat){\r\n        //We pass from and to this route which we get in backend when we post it and in return this route will return\r\n        //an array of object cantaining fromSelf and message field \r\n        const response = await axios.post(getAllMessagesRoute,{\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n        });\r\n        setMessages(response.data);//getting previous messages and setting it\r\n    }\r\n    }   \r\n    f1();\r\n},[currentChat])//renders everytime currentchat is changed\r\n\r\n    //for sending messages\r\n    const handleSendMsg = async (msg) => {\r\n        await axios.post(sendMessageRoute,{\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg,\r\n        })\r\n        //When we .emit in bacjend then we .on in frontend\r\n        //Emit for sending something\r\n        //on for receiving something\r\n        //emmiting \"send-msg\" event to backend\r\n        //to receive in this in backend we have to use .on\r\n        socket.current.emit(\"send-msg\",{\r\n\r\n            to: currentChat._id,\r\n            from: currentUser._id,\r\n            message: msg,\r\n        })\r\n        //adding new message in \"messages\" state if we send msg\r\n        const msgs = [...messages];//destructuring all the previous messages in msgs\r\n        msgs.push({fromSelf:true,message:msg});//pushing the current message in msgs\r\n        setMessages(msgs);//setMessages to msgs\r\n    };\r\n\r\n    //reciev message\r\n    useEffect(() => {\r\n        if(socket.current){\r\n            //receiving \"msg-recieve\" event which emmited from backend\r\n            socket.current.on(\"msg-recieve\",(msg)=> {\r\n                setArrivalMessage({fromSelf:false,message:msg});//if message recieved\r\n            })\r\n        }\r\n    },[]);\r\n\r\n    useEffect(()=> {\r\n        //If arrivalMessage exists then add new arrivalMessage in the messages\r\n        arrivalMessage && setMessages((prev)=> [...prev,arrivalMessage]);//if message arrived\r\n        //adding new message arrived in messages by setmessages\r\n        //destructing previous messages and adding arrivalMessage after it\r\n    },[arrivalMessage]);//runs every timenew mwssage arrived\r\n\r\n    useEffect(()=>{\r\n        //scrollIntoView is fuction inside useRef()\r\n        //as we difined scrollRef =useref() soscrolRef is accessing theuseRef funtion\r\n        //.current is used to see current state of scrollref and we change scrolllRef y ueing .current func\r\n        // everytime scrollRef is changed and it willbe changed every time messeges is changed\r\n        scrollRef.current?.scrollIntoView({behaviour:\"smooth\"})\r\n    },[messages]);//fired every tiemessages is changes\r\n    return  (\r\n    <>\r\n{\r\n    currentChat && (\r\n    <Container>\r\n        <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n                <div className=\"avatar\">\r\n                <img src={`data:image/svg+xml;base64,${currentChat.currentUserImage}`} alt=\"\" />\r\n                </div>\r\n                <div className=\"username\">\r\n                    <h3>{currentChat.username}</h3>\r\n                </div>\r\n            </div>\r\n            <Logout />\r\n        </div>\r\n        <div className=\"chat-messages\">\r\n            {\r\n                messages.map((message) => {\r\n                    return(\r\n                        <div ref={scrollRef} key={uuidv4}>\r\n                            <div className={`message ${message.fromSelf ? \"sended\":\"recieved\"}`}>\r\n                                <div className=\"content\">\r\n                                    <p>\r\n                                        {message.message}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n        {/* <Messages /> */}\r\n        <ChatInput handleSendMsg={handleSendMsg}/>\r\n    </Container>\r\n    )\r\n}\r\n    </>\r\n)}\r\n\r\nconst Container = styled.div`\r\n    padding-top:1rem;\r\n    display:grid;\r\n    grid-template-rows: 10% 78% 12%;\r\n    gap: 0.1rem;\r\n    overflow: hidden;\r\n    @media screen and (min-width:720px) and (max-width:1080px){\r\n        grid-template-rows: 15% 70% 15%;\r\n    }\r\n    .chat-header{\r\n        display:flex;\r\n        justify-content:space-between;\r\n        align-items:center;\r\n        padding: 0 2rem;\r\n        .user-details{\r\n            display:flex;\r\n            align-items:center;\r\n            gap:1rem;\r\n            .avatar{\r\n                img{\r\n                    height:3rem;\r\n\r\n                }\r\n            }\r\n            .username{\r\n                h3{\r\n                    color:white;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .chat-messages{\r\n        padding: 1rem 2rem;\r\n        display: flex;\r\n        flex-direction:column;\r\n        gap:1rem;\r\n        overflow: auto;\r\n        &::-webkit-scrollbar{\r\n            width: 0.2rem;\r\n            &-thumb{\r\n                background-color: #ffffff39;\r\n                width: 0.1rem;\r\n                border-radius: 1rem;\r\n            }\r\n        }\r\n        .message{\r\n            display:flex;\r\n            align-items:center;\r\n            .content{\r\n                max-width:40%;\r\n                overflow-wrap:break-word;\r\n                padding: 1rem;\r\n                font-size: 1.1rem;\r\n                border-radius: 1rem;\r\n                color: #d1d1d1;\r\n            }\r\n        }\r\n        .sended{\r\n            justify-content: flex-end;\r\n            .content{\r\n                background-color:#4f04ff21;\r\n            }\r\n        }\r\n        .recieved{\r\n            justify-content:flex-start;\r\n            .content{\r\n                background-color:#9900ff20;\r\n            }\r\n        }\r\n    }\r\n`","import React, { useState,useEffect,useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allUsersRoute,host } from '../utils/APIRoutes';\r\nimport Contacts from '../components/Contacts';\r\nimport Welcome from '../components/Welcome';\r\nimport ChatContainer from '../components/ChatContainer';\r\nimport {io} from \"socket.io-client\";\r\n\r\nexport default function Chat(){\r\n      const socket = useRef();\r\n      const navigate = useNavigate();\r\n      const [contacts,setContacts] = useState([]);\r\n      const [currentUser,setCurrentUser] = useState(undefined);\r\n      const [currentChat,setCurrentChat] = useState(undefined);\r\n      const [isLoaded,setIsLoaded] = useState(false);\r\n      useEffect(() => {//useEffect is executed in the sequence you have written it\r\n            const f1 = async ()=> {\r\n            if(!localStorage.getItem('snappy-user')){//If user hasnt already logged-in before\r\n                  navigate('/login')\r\n            }else{\r\n                  setCurrentUser(await JSON.parse(localStorage.getItem(\"snappy-user\")));\r\n                  setIsLoaded(true);\r\n                  //console.log(currentUser)\r\n                  //console.log(JSON.parse(localStorage.getItem(\"snappy-user\")));\r\n            }\r\n      }\r\n      f1();\r\n      },[])\r\n      //console.log(currentUser);\r\n      useEffect(()=> {\r\n            //If currentUsr exists\r\n            if(currentUser){\r\n                  socket.current = io(host);\r\n                  socket.current.emit(\"add-user\",currentUser._id);//add it in the global map that we set up in backend\r\n            }\r\n      },[currentUser])\r\n      useEffect(() => {\r\n            const f2 = async ()=>{\r\n            if(currentUser){//check if there is a current user\r\n                  if(currentUser.isAvatarImageSet){//check if avatarimage is set of current user\r\n                        //here we have not used {data} so we are getting all the fields from axios in data\r\n                        //i.e., status,data,statusText,config,headers,request\r\n                        //so to get a particular field we have to use data.data to get data, data.status to get status\r\n                        //data.request to get request\r\n                        //Here we want data field from axios so we used data.data in setContacts\r\n                        //data.data field contain the responds from the backend which we have sent in this route\r\n                        //return res.json(users); we have sent this in backend to frontend\r\n                        //so data.data will contain \"users\"\r\n                        //users have \"email\",\"username\",\"avatarImage\",\"_id\"\r\n                        const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);//get contacts\r\n                        setContacts(data.data);//set contacts\r\n                        //console.log(contacts);\r\n                  }else{\r\n                        navigate('/setAvatar');//if avatar isn't set\r\n                  }\r\n            }}\r\n            f2();\r\n      },[currentUser]);\r\n      //console.log(contacts);\r\n      const handleChatChange = (chat) => {\r\n            setCurrentChat(chat);\r\n      }\r\n      return (\r\n      <Container>\r\n            <div className=\"container\">\r\n                  <Contacts contacts={contacts} currentUser={currentUser} changeChat={handleChatChange}/>\r\n                  {\r\n                       isLoaded && currentChat == undefined ? (\r\n                        <Welcome currentUser={currentUser} />) :\r\n                        (<ChatContainer currentChat={currentChat} currentUser={currentUser} socket={socket}/>)\r\n                  }\r\n            </div>\r\n      </Container>\r\n      )\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n  .container {\r\n    height: 85vh;\r\n    width: 85vw;\r\n    background-color: #00000076;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n  }\r\n`;\r\n\r\n","//host is backend address\r\nexport const port = 5001;\r\nexport const host = `http://localhost:${port}`;\r\nexport const loginRoute = `${host}/api/auth/login`;\r\nexport const registerRoute = `${host}/api/auth/register`;\r\nexport const setAvatarRoute = `${host}/api/auth/setavatar`;\r\nexport const allUsersRoute = `${host}/api/auth/allusers`;\r\nexport const sendMessageRoute = `${host}/api/messages/addmsg`; \r\nexport const getAllMessagesRoute = `${host}/api/messages/getmsg`;   \r\nexport const firebaseLoginRoute = `${host}/api/auth/firebaselogin`;\r\nexport const checkUsernameRoute = `${host}/api/auth/checkusername`;"],"names":["Contacts","contacts","currentUser","changeChat","useState","undefined","currentUserName","setCurrentUserName","currentUserImage","setCurrentUserImage","currentSelected","setCurrentSelected","useEffect","avatarImage","username","Container","className","src","Logo","alt","map","contact","index","onClick","changeCurrentChat","styled","Welcome","Robot","ChatInput","handleSendMsg","showEmojiPicker","setShowEmojiPicker","msg","setMsg","onEmojiClick","event","emoji","message","onSubmit","e","preventDefault","length","type","placeholder","value","onChange","target","Logout","navigate","useNavigate","handleClick","localStorage","clear","Button","ChatContainer","currentChat","socket","scrollRef","useRef","messages","setMessages","arrivalMessage","setArrivalMessage","f1","axios","getAllMessagesRoute","from","_id","to","response","data","sendMessageRoute","current","emit","msgs","push","fromSelf","on","prev","scrollIntoView","behaviour","ref","uuidv4","Chat","setContacts","setCurrentUser","setCurrentChat","isLoaded","setIsLoaded","getItem","JSON","parse","io","host","f2","isAvatarImageSet","allUsersRoute","chat","loginRoute","registerRoute","setAvatarRoute","firebaseLoginRoute","checkUsernameRoute"],"sourceRoot":""}